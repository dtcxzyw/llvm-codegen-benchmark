func000000000000002b:
	xorl	%eax, %eax
	cmpq	%rdx, %rsi
	setg	%al
	leaq	16(%rdi,%rax,8), %rax
	retq

func000000000000001b:
	xorl	%eax, %eax
	cmpq	%rdx, %rsi
	setge	%al
	leaq	16(%rdi,%rax,8), %rax
	retq

func0000000000000013:
	xorl	%eax, %eax
	cmpq	%rdx, %rsi
	setb	%al
	leaq	16(%rdi,%rax,8), %rax
	retq

func0000000000000007:
	leaq	304(%rdi), %rax
	cmpq	%rdx, %rsi
	cmoveq	%rdi, %rax
	retq

func0000000000000023:
	xorl	%eax, %eax
	cmpq	%rdx, %rsi
	setbe	%al
	leaq	16(%rdi,%rax,8), %rax
	retq

func0000000000000063:
	xorl	%eax, %eax
	cmpq	%rdx, %rsi
	seta	%al
	leaq	16(%rdi,%rax,8), %rax
	retq

func0000000000000004:
	xorl	%eax, %eax
	cmpq	%rdx, %rsi
	sete	%al
	shll	$4, %eax
	addq	%rdi, %rax
	retq

func000000000000002c:
	leaq	48(%rdi), %rax
	leaq	8(%rdi), %rcx
	cmpq	%rdx, %rsi
	cmovlq	%rcx, %rax
	retq

func0000000000000018:
	xorl	%eax, %eax
	cmpq	%rdx, %rsi
	setge	%al
	leaq	-8(%rdi,%rax,8), %rax
	retq

func0000000000000010:
	xorl	%eax, %eax
	cmpq	%rdx, %rsi
	setae	%al
	leaq	16(%rdi,%rax,8), %rax
	retq

func0000000000000060:
	xorl	%eax, %eax
	cmpq	%rdx, %rsi
	seta	%al
	leaq	16(%rdi,%rax,8), %rax
	retq

func0000000000000050:
	xorl	%eax, %eax
	cmpq	%rdx, %rsi
	setae	%al
	leaq	16(%rdi,%rax,8), %rax
	retq

func0000000000000053:
	xorl	%eax, %eax
	cmpq	%rdx, %rsi
	setae	%al
	leaq	8(%rdi,%rax,8), %rax
	retq

func000000000000001f:
	leaq	736(%rdi), %rax
	leaq	408(%rdi), %rcx
	cmpq	%rdx, %rsi
	cmovgq	%rcx, %rax
	retq

func000000000000001a:
	leaq	-72(%rdi), %rax
	leaq	88(%rdi), %rcx
	cmpq	%rdx, %rsi
	cmovlq	%rcx, %rax
	retq

func0000000000000006:
	xorl	%eax, %eax
	cmpq	%rdx, %rsi
	setne	%al
	leaq	-8(%rdi,%rax,8), %rax
	retq

